树的性质：
性质1：树中的结点数等于所有结点的度数加1。
性质2：度为m的树中第i层上至多有mi-1个结点，这里应有i≥1。（数学归纳法）
性质3： 高度为h的m次树至多有(m的h次方-1)/(m-1)个结点。
性质4：具有n个结点的m次树的最小高度为[logm(n(m-1)+1)]。

先根遍历:若树不空，则先访问根结点，然后依次先根遍历各棵子树。(递归的)
后根遍历:若树不空，则先依次后根遍历各棵子树，然后访问根结点。（递归的）
层次遍历:若树不空，则自上而下自左至右访问树中每个结点。


二叉树的定义：
二叉树也称为二分树，它是有限的结点集合，这个集合或者是空，或者由一个根结点和两棵互不相交的称为左子树和右子树的二叉树组成。
二叉树中许多概念与树中的概念相同。
在含n个结点的二叉树中，所有结点的度小于等于2，通常用n0表示叶子结点个数，n1表示单分支结点个数，n2表示双分支结点个数

注意：二叉树与度为2的树是不同的。
1.度为2的树至少有3个结点，而二叉树的结点数可以为0。
2.度为2的树不区分子树的次序，而二叉树中的每个结点最多有两个孩子结点，且必须要区分左右子树，
即使在结点只有一棵子树的情况下也要明确指出该子树是左子树还是右子树。

满二叉树的定义：
一棵二叉树中，如果所有分支结点都有左孩子结点和右孩子结点，并且叶子结点都集中在二叉树的最下一层，这样的二叉树称为满二叉树。
满二叉树的特点如下：
1.叶子结点都在最下一层。
2.只有度为0和度为2的结点。
3.含n个结点的满二叉树的高度为log2(n+1)，叶子结点个数为(n/2)+1，度为2的结点个数为(n/2)。


完全二叉树的定义：
若二叉树中最多只有最下面两层的结点的度数可以小于2，并且最下面一层的叶子结点都依次排列在该层最左边的位置上，
则这样的二叉树称为完全二叉树。
完全二叉树的特点如下：
1.叶子结点只可能出现在最下面两层中。
2.对于最大层次中的叶子结点，都依次排列在该层最左边的位置上。
3.如果有度为1的结点，只可能有一个，且该结点只有左孩子而无右孩子；
4.按层序编号后，一旦出现某结点（其编号为i）为叶子结点或只有左孩子，则编号大于i的结点均为叶子结点。


二叉树的性质：
性质1   非空二叉树上叶结点数等于双分支结点数加1。即n0=n2+1。
在二叉树中计算结点时常用的关系式有：①所有结点的度之和=n-1 ②所有结点的度之和＝n1＋2n2 ③n=n0+n1+n2。
性质2  非空二叉树上第i层上至多有2的i-1方个结点，这里应有i≥1。
性质3  高度为h的二叉树至多有2的h次方-1个结点（h≥1）。
性质4  完全二叉树（结点个数为n）层序编号后的性质。
    （1）若完全二叉树的根结点编号为1，对于编号为i（1≤i≤n）的结点有：
    a.最后一个分支结点的编号为n/2。
    b.若n为奇数，则n1=0，每个分支结点都是双分支结点；若n为偶数，则n1=1，只有一个单分支结点。
    c.若编号为i的结点有左孩子结点，则左孩子结点的编号为2i；若编号为i的结点有右孩子结点，则右孩子结点的编号为2i+1。
    （因为）
    d.若编号为i的结点有左兄弟结点，左兄弟结点的编号为i-1，若有右兄弟结点，右兄弟结点的编号为i+1。
    e.若编号为i的结点有双亲结点，其双亲结点的编号为i/2。
        i/2
         |
         i
        / \
      2i  2i+1

    （2）若完全二叉树的根结点编号为0，对于编号为i（0≤i≤n-1）的结点有：
    a.最后一个分支结点的编号为(n/2)-1。
    b.若n为奇数，则n1=0，每个分支结点都是双分支结点；若n为偶数，则n1=1，只有一个单分支结点。
    c.若编号为i的结点有左孩子结点，则左孩子结点的编号为2i+1；若编号为i的结点有右孩子结点，则右孩子结点的编号为2i+2。
    d.若编号为i的结点有左兄弟结点，左兄弟结点的编号为i-1，若有右兄弟结点，右兄弟结点的编号为i+1。
    e.若编号为i的结点有双亲结点，其双亲结点的编号为[(i-1)/2]。
       (i-1)/2
         |
         i
        / \
     2i+1  2i+2
    （如何理解：给所有节点借1，就跟情况1一模一样了，然后再减一得出来的就是这张图）

性质5 具有n个（n＞0）结点的完全二叉树的高度为log2(n+1)或log2n+1。

归纳：
1.一棵完全二叉树中，由结点总数n可以确定其树形。（显然）
2.n1只能是0或1，当n为偶数时，n1=1，当n为奇数时，n1=0。（因为完全二叉树的定义）
3.层序编号（从1开始）为i的结点层次恰好为[log2(i+1)]或者[log2i]+1。(前代表最右叶节点，后代表算出来的结果向上取)





